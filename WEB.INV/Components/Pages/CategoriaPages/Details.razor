@page "/categoria/details"
@using Microsoft.EntityFrameworkCore
@using WEB.INT
@inject IDbContextFactory<DBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Detalles de Categoría</PageTitle>

<div class="container mt-5">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Detalles de la Categoría</h3>
        </div>
        <div class="card-body">
            @if (categoria is null)
            {
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p class="mt-2"><em>Cargando...</em></p>
                </div>
            }
            else
            {
                <dl class="row">
                    <dt class="col-sm-3 font-weight-bold">Nombre:</dt>
                    <dd class="col-sm-9">@categoria.Nombre</dd>
                </dl>

                <div class="d-flex justify-content-between mt-4">
                    <a href="@($"/categoria/edit?idcategoria={categoria.IdCategoria}")" class="btn btn-warning">
                        <i class="fas fa-edit"></i> Editar
                    </a>
                    <a href="/categoria" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Volver a la lista
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private Categoria? categoria;

    [SupplyParameterFromQuery]
    private string IdCategoria { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        categoria = await context.Categoria.FirstOrDefaultAsync(m => m.IdCategoria == IdCategoria);

        if (categoria is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
