@page "/categoria/edit"
@using Microsoft.EntityFrameworkCore
@using WEB.INT
@inject IDbContextFactory<DBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Editar Categoría</PageTitle>

<div class="container mt-5">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-warning text-dark">
            <h3 class="mb-0">Editar Categoría</h3>
        </div>
        <div class="card-body">
            @if (Categoria is null)
            {
                <div class="text-center">
                    <div class="spinner-border text-warning" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p class="mt-2"><em>Cargando...</em></p>
                </div>
            }
            else
            {
                <div class="row justify-content-center">
                    <div class="col-md-6">
                        <EditForm method="post" Model="Categoria" OnValidSubmit="UpdateCategoria" FormName="edit" Enhance>
                            <DataAnnotationsValidator />
                            <ValidationSummary role="alert" class="alert alert-danger" />

                            <input type="hidden" name="Categoria.IdCategoria" value="@Categoria.IdCategoria" />

                            <div class="mb-3">
                                <label for="nombre" class="form-label fw-bold">Nombre de la Categoría:</label>
                                <InputText id="nombre" @bind-Value="Categoria.Nombre" class="form-control" placeholder="Ingrese el nombre" />
                                <ValidationMessage For="() => Categoria.Nombre" class="text-danger" />
                            </div>

                            <div class="d-flex justify-content-between mt-4">
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-save"></i> Guardar Cambios
                                </button>
                                <a href="/categoria" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Volver a la lista
                                </a>
                            </div>
                        </EditForm>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromQuery]
    private string IdCategoria { get; set; }

    [SupplyParameterFromForm]
    private Categoria? Categoria { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        Categoria ??= await context.Categoria.FirstOrDefaultAsync(m => m.IdCategoria == IdCategoria);

        if (Categoria is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task UpdateCategoria()
    {
        using var context = DbFactory.CreateDbContext();
        context.Attach(Categoria!).State = EntityState.Modified;

        try
        {
            await context.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!CategoriaExists(Categoria!.IdCategoria))
            {
                NavigationManager.NavigateTo("notfound");
            }
            else
            {
                throw;
            }
        }

        NavigationManager.NavigateTo("/categoria");
    }

    private bool CategoriaExists(string idcategoria)
    {
        using var context = DbFactory.CreateDbContext();
        return context.Categoria.Any(e => e.IdCategoria == idcategoria);
    }
}
