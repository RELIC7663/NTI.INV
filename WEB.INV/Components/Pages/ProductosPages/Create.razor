@page "/productos/create"
@using Microsoft.EntityFrameworkCore
@using NTI.INV
@inject IDbContextFactory<DBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Productos</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Productos" OnValidSubmit="AddProductos" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="Codigo" class="form-label">Codigo:</label>
                <InputText id="Codigo" @bind-Value="Productos.Codigo" class="form-control" />
                <ValidationMessage For="() => Productos.Codigo" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="nombre" class="form-label">Nombre:</label> 
                <InputText id="nombre" @bind-Value="Productos.Nombre" class="form-control" /> 
                <ValidationMessage For="() => Productos.Nombre" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="idcategoria" class="form-label">IdCategoria:</label> 
                <InputText id="idcategoria" @bind-Value="Productos.IdCategoria" class="form-control" /> 
                <ValidationMessage For="() => Productos.IdCategoria" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="precio" class="form-label">Precio:</label> 
                <InputNumber id="precio" @bind-Value="Productos.Precio" class="form-control" /> 
                <ValidationMessage For="() => Productos.Precio" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="stock" class="form-label">Stock:</label> 
                <InputNumber id="stock" @bind-Value="Productos.Stock" class="form-control" /> 
                <ValidationMessage For="() => Productos.Stock" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/productos">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Productos Productos { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddProductos()
    {
        using var context = DbFactory.CreateDbContext();
        context.Productos.Add(Productos);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/productos");
    }
}
