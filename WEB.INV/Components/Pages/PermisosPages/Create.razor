@page "/permisos/create"
@using Microsoft.EntityFrameworkCore
@using WEB.INT
@inject IDbContextFactory<DBContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Crear Permiso</PageTitle>

<div class="container mt-5">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">Crear Nuevo Permiso</h3>
        </div>
        <div class="card-body">
            <EditForm method="post" Model="Permisos" OnValidSubmit="AddPermisos" FormName="create" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary class="alert alert-danger" role="alert" />

                <!-- Campo ID Permisos -->
                <div class="mb-3">
                    <label for="IdPermisos" class="form-label">ID Permisos:</label>
                    <InputText id="IdPermisos" @bind-Value="Permisos.IdPermisos" class="form-control" placeholder="Ingrese el ID del permiso" />
                    <ValidationMessage For="() => Permisos.IdPermisos" class="text-danger" />
                </div>

                <!-- Campo Tipo de Permiso -->
                <div class="mb-3">
                    <label for="tipopermiso" class="form-label">Tipo de Permiso:</label>
                    <InputText id="tipopermiso" @bind-Value="Permisos.TipoPermiso" class="form-control" placeholder="Ingrese el tipo de permiso" />
                    <ValidationMessage For="() => Permisos.TipoPermiso" class="text-danger" />
                </div>

                <!-- Botones -->
                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Crear
                    </button>
                    <a href="/permisos" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Volver a la lista
                    </a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Permisos Permisos { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddPermisos()
    {
        using var context = DbFactory.CreateDbContext();
        context.Permisos.Add(Permisos);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/permisos");
    }
}
